& when (@critical) {
    html {
        color:       @base__color;
        background:  @base__background;
        font-family: @base__font-family;
        font-size:   @base__font-size;
        line-height: @base__line-height;
    }

    ::selection {
        .lib-css(color, @selection__color);
        .lib-css(background, @selection__background);
    }
    ::-moz-selection {
        .lib-css(color, @selection__color);
        .lib-css(background, @selection__background);
    }

    code, kbd, pre, samp {
        font-family: @font-mono;
    }

    h1, .h1,
    h2, .h2,
    h3, .h3,
    h4, .h4,
    h5, .h5,
    h6, .h6,
    .heading {
        color: @headings__color;
        .lib-css(font-family, @headings__font-family);
        .lib-css(text-transform, @headings__text-transform);

    }

    h1, .h1,
    h2, .h2,
    h3, .h3 {
        strong {
            font-weight: 700;
        }
    }

    h4, .h4,
    h5, .h5,
    h6, .h6,
    .heading {
        strong {
            font-weight: 600;
        }
    }

    h1,
    .h1 {
        .lib-css(font-size, @h1__font-size);
        .lib-css(font-weight, @h1__font-weight);
        .lib-css(text-transform, @h1__text-transform);
        .lib-css(letter-spacing, @h1__letter-spacing);
        .lib-css(line-height, @h1__line-height);
        .lib-css(margin-bottom, @h1__margin-bottom);
        * + & {
            .lib-css(margin-top, @h1__margin-top);
        }
    }
    h2,
    .h2 {
        .lib-css(font-size, @h2__font-size);
        .lib-css(font-weight, @h2__font-weight);
        .lib-css(text-transform, @h2__text-transform);
        .lib-css(letter-spacing, @h2__letter-spacing);
        .lib-css(line-height, @h2__line-height);
        .lib-css(margin-bottom, @h2__margin-bottom);
        * + & {
            .lib-css(margin-top, @h2__margin-top);
        }
    }
    h3,
    .h3 {
        .lib-css(font-size, @h3__font-size);
        .lib-css(font-weight, @h3__font-weight);
        .lib-css(text-transform, @h3__text-transform);
        .lib-css(letter-spacing, @h3__letter-spacing);
        .lib-css(line-height, @h3__line-height);
        .lib-css(margin-bottom, @h3__margin-bottom);
        * + & {
            .lib-css(margin-top, @h3__margin-top);
        }
    }
    h4,
    .h4 {
        .lib-css(font-size, @h4__font-size);
        .lib-css(font-weight, @h4__font-weight);
        .lib-css(text-transform, @h4__text-transform);
        .lib-css(letter-spacing, @h4__letter-spacing);
        .lib-css(line-height, @h4__line-height);
        .lib-css(margin-bottom, @h4__margin-bottom);
        * + & {
            .lib-css(margin-top, @h4__margin-top);
        }
    }
    h5,
    .h5 {
        .lib-css(font-size, @h5__font-size);
        .lib-css(font-weight, @h5__font-weight);
        .lib-css(text-transform, @h5__text-transform);
        .lib-css(letter-spacing, @h5__letter-spacing);
        .lib-css(line-height, @h5__line-height);
        .lib-css(margin-bottom, @h5__margin-bottom);
        * + & {
            .lib-css(margin-top, @h5__margin-top);
        }
    }
    h6,
    .h6 {
        .lib-css(font-size, @h6__font-size);
        .lib-css(font-weight, @h6__font-weight);
        .lib-css(text-transform, @h6__text-transform);
        .lib-css(letter-spacing, @h6__letter-spacing);
        .lib-css(line-height, @h6__line-height);
        .lib-css(margin-bottom, @h6__margin-bottom);
        * + & {
            .lib-css(margin-top, @h6__margin-top);
        }
    }

    ul.disc {
        &:extend(.breeze-prose :where(ul:not(.unstyled):not(.items)) all);
    }

    dl {
        dt {
            font-weight: 500;
        }
        dd + dt {
            margin-top: @1;
        }
    }

    .icon {
        flex-shrink: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        line-height: 0;
        gap: @1;
    }
    svg.icon,
    .icon > svg {
        fill: currentColor;
        width: @6;
        height: @6;
    }
    svg.icon.small,
    .icon.small > svg {
        width: @4;
        height: @4;
    }
    svg.icon.big,
    .icon.big > svg {
        width: @7;
        height: @7;
    }
    .icon.rounded {
        background: @muted__background;
        padding: @3;
        &.small {
            padding: @2;
        }
    }
    .icon {
        &.rounded { border-radius: @1; }
        &.rounded-sm { border-radius: @0-5; }
        &.rounded-lg { border-radius: @2; }
        &.rounded-full { border-radius: 9999px; }
    }

    .table-wrapper:not(.grouped) {
        overflow-x: auto;
        position: relative;
    }
    table {
        border-color: @divider__color;
        .text-align(left);
        width: 100%;
        .id a,
        .actions a {
            &:extend(.breeze-link all);
            .margin(0 @1 @1 0);
            &:last-child {
                margin: 0;
            }
        }
        caption {
            &:extend(.breeze-sr-only);
        }
        tr {
            --divider-alpha: .07;
            border-bottom: 1px solid @divider__color;
        }
        th {
            font-weight: 500;
        }
        td, th {
            border-color: @divider__color;
            vertical-align: top;
            padding: @3 @2;
            &:first-child {
                .padding-left(0);
            }
            &:last-child {
                .padding-right(0);
            }
        }
        thead tr {
            --divider-alpha: .15;
        }
        thead th {
            color: @headings__color;
        }
        tbody:last-child tr:last-child {
            border-bottom: 0;
        }
        tfoot {
            tr {
                border: 0;
            }
            th, td {
                padding-top: @2;
                padding-bottom: @2;
            }
            .mark {
                .text-align(right);
            }
        }

        // table inserted via WYSIWYG editor
        &[border] {
            border-style: solid;
            tr {
                --divider-alpha: .07;
            }
            td, th {
                &:first-child {
                    .padding-left(@2);
                }
            }
            &[style*="border-color"] {
                tr,
                th,
                td {
                    border-color: inherit;
                }
            }
        }
    }

    @media @media-sm-down and screen {
        .mobile-table,
        .table:not(.additional-attributes):not(.table-totals):not(.totals):not(.cart):not(.table-comparison):not(.grouped) {
            .breeze-table();
        }
    }

    hr {
        margin: @3 0;
        border: 1px solid @divider__color;
        border-right: 0;
        border-left: 0;
        border-bottom: 0;
    }

    :where(a[href^="tel:"]),
    :where(a[href^="mailto:"]),
    a.alert,
    address a {
        &:extend(.breeze-link all);
    }

    p.required {
        color: @danger__color;
    }
    .note {
        color: @muted__color;
    }

    .prose,
    .cms-no-route .main,
    .cms-page-view .main {
        .lib-css(font-size, @prose__font-size);
        .lib-css(line-height, @prose__line-height);
        &:extend(.breeze-prose all);
    }
    .text-reset {
        .breeze-text-base();
    }
}
